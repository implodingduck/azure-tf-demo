trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: plan_sbx
    variables:
      - group: kv-azure-tf-demo-sbx
    jobs:
    - job: terraform_plan
      steps:
      - script: terraform --version
        displayName: 'check terraform version'
      - task: AzureCLI@2
        displayName: "Terraform Init"
        inputs:
          azureSubscription: ARM_SUBSCRIPTION
          scriptType: bash
          addSpnToEnvironment: true
          scriptLocation: inlineScript
          inlineScript: |
            echo "starting..."
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_CLIENT_SECRET=$servicePrincipalKey
            export ARM_TENANT_ID=$tenantId
            ./env_setup.sh
            terraform init --backend-config=backend.tfvars
        env:
          TF_VAR_subscription_id: $(subscription-id)
          TF_VAR_storage_account_name: $(storage-account-name)
          TF_VAR_resource_group_name: $(resource-group-name)
          TF_VAR_key: $(key)
          TF_VAR_container_name: $(container-name)
      - task: AzureCLI@2
        displayName: "Terraform Plan"
        inputs:
          azureSubscription: ARM_SUBSCRIPTION
          scriptType: bash
          addSpnToEnvironment: true
          scriptLocation: inlineScript
          inlineScript: |
            echo "starting..."
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_CLIENT_SECRET=$servicePrincipalKey
            export ARM_TENANT_ID=$tenantId
            terraform plan -out theplansbx
        env:
          TF_VAR_subscription_id: $(subscription-id)
          TF_VAR_storage_account_name: $(storage-account-name)
          TF_VAR_resource_group_name: $(resource-group-name)
          TF_VAR_key: $(key)
          TF_VAR_container_name: $(container-name)
          TF_VAR_env: sbx
      - publish: $(System.DefaultWorkingDirectory)/theplansbx
        artifact: theplansbx
  - stage: apply_sbx
    variables:
      - group: kv-azure-tf-demo-sbx
    jobs:
    - deployment: terraform_apply
      environment: sandbox
      strategy:
       runOnce:
         deploy:
          steps:
          - checkout: self
          - download: current
            artifact: theplansbx
          - task: AzureCLI@2
            displayName: "Terraform Init"
            inputs:
              azureSubscription: ARM_SUBSCRIPTION
              scriptType: bash
              addSpnToEnvironment: true
              scriptLocation: inlineScript
              inlineScript: |
                echo "starting..."
                export ARM_CLIENT_ID=$servicePrincipalId
                export ARM_CLIENT_SECRET=$servicePrincipalKey
                export ARM_TENANT_ID=$tenantId
                ./env_setup.sh
                echo $TF_VAR_container_name
                terraform init --backend-config=backend.tfvars
            env:
              TF_VAR_subscription_id: $(subscription-id)
              TF_VAR_storage_account_name: $(storage-account-name)
              TF_VAR_resource_group_name: $(resource-group-name)
              TF_VAR_key: $(key)
              TF_VAR_container_name: $(container-name)
          - task: AzureCLI@2
            displayName: "Terraform Apply"
            inputs:
              azureSubscription: ARM_SUBSCRIPTION
              scriptType: bash
              addSpnToEnvironment: true
              scriptLocation: inlineScript
              inlineScript: |
                echo "starting..."
                export ARM_CLIENT_ID=$servicePrincipalId
                export ARM_CLIENT_SECRET=$servicePrincipalKey
                export ARM_TENANT_ID=$tenantId
                terraform apply -auto-approve  $(Pipeline.Workspace)/theplansbx/theplansbx
            env:
              TF_VAR_subscription_id: $(subscription-id)
              TF_VAR_storage_account_name: $(storage-account-name)
              TF_VAR_resource_group_name: $(resource-group-name)
              TF_VAR_key: $(key)
              TF_VAR_container_name: $(container-name)
  - stage: plan_prod
    variables:
      - group: kv-azure-tf-demo-prod
    jobs:
    - job: terraform_plan
      steps:
      - script: terraform --version
        displayName: 'check terraform version'
      - task: AzureCLI@2
        displayName: "Terraform Init"
        inputs:
          azureSubscription: ARM_SUBSCRIPTION
          scriptType: bash
          addSpnToEnvironment: true
          scriptLocation: inlineScript
          inlineScript: |
            echo "starting..."
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_CLIENT_SECRET=$servicePrincipalKey
            export ARM_TENANT_ID=$tenantId
            ./env_setup.sh
            terraform init --backend-config=backend.tfvars
        env:
          TF_VAR_subscription_id: $(subscription-id)
          TF_VAR_storage_account_name: $(storage-account-name)
          TF_VAR_resource_group_name: $(resource-group-name)
          TF_VAR_key: $(key)
          TF_VAR_container_name: $(container-name)
      - task: AzureCLI@2
        displayName: "Terraform Plan"
        inputs:
          azureSubscription: ARM_SUBSCRIPTION
          scriptType: bash
          addSpnToEnvironment: true
          scriptLocation: inlineScript
          inlineScript: |
            echo "starting..."
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_CLIENT_SECRET=$servicePrincipalKey
            export ARM_TENANT_ID=$tenantId
            terraform plan -out theplanprod
        env:
          TF_VAR_subscription_id: $(subscription-id)
          TF_VAR_storage_account_name: $(storage-account-name)
          TF_VAR_resource_group_name: $(resource-group-name)
          TF_VAR_key: $(key)
          TF_VAR_container_name: $(container-name)
          TF_VAR_env: prod
      - publish: $(System.DefaultWorkingDirectory)/theplanprod
        artifact: theplanprod
  - stage: apply_prod
    variables:
      - group: kv-azure-tf-demo-prod
    jobs:
    - deployment: terraform_apply
      environment: production
      strategy:
       runOnce:
         deploy:
          steps:
          - checkout: self
          - download: current
            artifact: theplanprod
          - task: AzureCLI@2
            displayName: "Terraform Init"
            inputs:
              azureSubscription: ARM_SUBSCRIPTION
              scriptType: bash
              addSpnToEnvironment: true
              scriptLocation: inlineScript
              inlineScript: |
                echo "starting..."
                export ARM_CLIENT_ID=$servicePrincipalId
                export ARM_CLIENT_SECRET=$servicePrincipalKey
                export ARM_TENANT_ID=$tenantId
                ./env_setup.sh
                echo $TF_VAR_container_name
                terraform init --backend-config=backend.tfvars
            env:
              TF_VAR_subscription_id: $(subscription-id)
              TF_VAR_storage_account_name: $(storage-account-name)
              TF_VAR_resource_group_name: $(resource-group-name)
              TF_VAR_key: $(key)
              TF_VAR_container_name: $(container-name)
          - task: AzureCLI@2
            displayName: "Terraform Apply"
            inputs:
              azureSubscription: ARM_SUBSCRIPTION
              scriptType: bash
              addSpnToEnvironment: true
              scriptLocation: inlineScript
              inlineScript: |
                echo "starting..."
                export ARM_CLIENT_ID=$servicePrincipalId
                export ARM_CLIENT_SECRET=$servicePrincipalKey
                export ARM_TENANT_ID=$tenantId
                terraform apply -auto-approve  $(Pipeline.Workspace)/theplanprod/theplanprod
            env:
              TF_VAR_subscription_id: $(subscription-id)
              TF_VAR_storage_account_name: $(storage-account-name)
              TF_VAR_resource_group_name: $(resource-group-name)
              TF_VAR_key: $(key)
              TF_VAR_container_name: $(container-name)